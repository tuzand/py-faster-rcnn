name: "VGG_CNN_M_1024"
layer {
  name: 'data'
  type: 'Python'
  top: 'data'
  top: 'rois'
  top: 'labels'
  top: 'bbox_targets'
  top: 'bbox_inside_weights'
  top: 'bbox_outside_weights'
  python_param {
    module: 'roi_data_layer.layer'
    layer: 'RoIDataLayer'
    param_str: "'num_classes': 33"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param { lr_mult: 0 decay_mult: 0 }
  param { lr_mult: 0 decay_mult: 0 }
  convolution_param {
    num_output: 96
    kernel_size: 7 stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0005
    beta: 0.75
    k: 2
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3 stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  convolution_param {
    num_output: 256
    pad: 1 kernel_size: 5 stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0005
    beta: 0.75
    k: 2
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3 stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  convolution_param {
    num_output: 512
    pad: 1 kernel_size: 3
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  convolution_param {
    num_output: 512
    pad: 1 kernel_size: 3
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  convolution_param {
    num_output: 512
    pad: 1 kernel_size: 3
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}

#========= RCNN ============

layer {
  name: "slice_data"
  type: "Slice"
  bottom: "conv5"
  top: "data_cls"
  top: "data_det"
  slice_param {
    slice_dim: 0
    slice_point: 1
  }
  include {
    phase: TRAIN
  }
}

layer {
  name: "slice_rois"
  type: "Slice"
  bottom: "rois"
  top: "rois_cls"
  top: "rois_det"
  slice_param {
    slice_dim: 0
    slice_point: 64
  }
  include {
    phase: TRAIN
  }
}

layer {
  name: "slice_labels"
  type: "Slice"
  bottom: "labels"
  top: "labels_cls"
  top: "labels_det"
  slice_param {
    slice_dim: 0
    slice_point: 64
  }
  include {
    phase: TRAIN
  }
}

layer {
  name: "slice_bbox_targets"
  type: "Slice"
  bottom: "bbox_targets"
  top: "bbox_targets_cls"
  top: "bbox_targets_det"
  slice_param {
    slice_dim: 0
    slice_point: 64
  }
  include {
    phase: TRAIN
  }
}

layer {
  name: "slice_bbox_inside_weights"
  type: "Slice"
  bottom: "bbox_inside_weights"
  top: "bbox_inside_weights_cls"
  top: "bbox_inside_weights_det"
  slice_param {
    slice_dim: 0
    slice_point: 64
  }
  include {
    phase: TRAIN
  }
}

layer {
  name: "slice_bbox_outside_weights"
  type: "Slice"
  bottom: "bbox_outside_weights"
  top: "bbox_outside_weights_cls"
  top: "bbox_outside_weights_det"
  slice_param {
    slice_dim: 0
    slice_point: 64
  }
  include {
    phase: TRAIN
  }
}

layer {
  name: "roi_pool5_cls"
  type: "ROIPooling"
  bottom: "data_cls"
  bottom: "rois_cls"
  top: "pool5_cls"
  roi_pooling_param {
    pooled_w: 6
    pooled_h: 6
    spatial_scale: 0.0625 # 1/16
  }
}
layer {
  name: "fc6_cls"
  type: "InnerProduct"
  bottom: "pool5_cls"
  top: "fc6_cls"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6_cls"
  type: "ReLU"
  bottom: "fc6_cls"
  top: "fc6_cls"
}
layer {
  name: "drop6_cls"
  type: "Dropout"
  bottom: "fc6_cls"
  top: "fc6_cls"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7_cls"
  type: "InnerProduct"
  bottom: "fc6_cls"
  top: "fc7_cls"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  inner_product_param {
    num_output: 1024
  }
}
layer {
  name: "relu7_cls"
  type: "ReLU"
  bottom: "fc7_cls"
  top: "fc7_cls"
}
layer {
  name: "drop7_cls"
  type: "Dropout"
  bottom: "fc7_cls"
  top: "fc7_cls"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "score_cls"
  type: "InnerProduct"
  bottom: "fc7_cls"
  top: "score_cls"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  inner_product_param {
    num_output: 33
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7_cls"
  top: "bbox_pred"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  inner_product_param {
    num_output: 132
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "score_cls"
  bottom: "labels_cls"
  propagate_down: 1
  propagate_down: 0
  top: "loss_cls"
  loss_weight: 1
}
layer {
  name: "loss_bbox_cls"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets_cls"
  bottom: "bbox_inside_weights_cls"
  bottom: "bbox_outside_weights_cls"
  top: "loss_bbox"
  loss_weight: 1
}

#========= RCNN DET ========

layer {
  name: "roi_pool5_det"
  type: "ROIPooling"
  bottom: "data_det"
  bottom: "rois_det"
  top: "pool5_det"
  roi_pooling_param {
    pooled_w: 6
    pooled_h: 6
    spatial_scale: 0.0625 # 1/16
  }
}
layer {
  name: "fc6_det"
  type: "InnerProduct"
  bottom: "pool5_det"
  top: "fc6_det"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6_det"
  type: "ReLU"
  bottom: "fc6_det"
  top: "fc6_det"
}
layer {
  name: "drop6_det"
  type: "Dropout"
  bottom: "fc6_det"
  top: "fc6_det"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7_det"
  type: "InnerProduct"
  bottom: "fc6_det"
  top: "fc7_det"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  inner_product_param {
    num_output: 1024
  }
}
layer {
  name: "relu7_det"
  type: "ReLU"
  bottom: "fc7_det"
  top: "fc7_det"
}
layer {
  name: "drop7_det"
  type: "Dropout"
  bottom: "fc7_det"
  top: "fc7_det"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "score_det"
  type: "InnerProduct"
  bottom: "fc7_det"
  top: "score_det"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred_det"
  type: "InnerProduct"
  bottom: "fc7_det"
  top: "bbox_pred_det"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_det"
  type: "SoftmaxWithLoss"
  bottom: "score_det"
  bottom: "labels_det"
  propagate_down: 1
  propagate_down: 0
  top: "loss_det"
  loss_weight: 1
}

layer {
  name: "slice_bbox_targets_det"
  type: "Slice"
  bottom: "bbox_targets_det"
  top: "bbox_targets_det_cropped"
  top: "dummy1"
  slice_param {
    slice_dim: 1
    slice_point: 8
  }
  include {
    phase: TRAIN
  }
}

layer {
  name: "slice_bbox_inside_weights_det"
  type: "Slice"
  bottom: "bbox_inside_weights_det"
  top: "bbox_inside_weights_det_cropped"
  top: "dummy2"
  slice_param {
    slice_dim: 1
    slice_point: 8
  }
  include {
    phase: TRAIN
  }
}

layer {
  name: "slice_bbox_outside_weights_det"
  type: "Slice"
  bottom: "bbox_outside_weights_det"
  top: "bbox_outside_weights_det_cropped"
  top: "dummy3"
  slice_param {
    slice_dim: 1
    slice_point: 8
  }
  include {
    phase: TRAIN
  }
}

layer {
  name: "Silence"
  type: "Silence"
  bottom: "dummy1"
  bottom: "dummy2"
  bottom: "dummy3"
}

layer {
  name: "loss_bbox_det"
  type: "SmoothL1Loss"
  bottom: "bbox_pred_det"
  bottom: "bbox_targets_det_cropped"
  bottom: "bbox_inside_weights_det_cropped"
  bottom: "bbox_outside_weights_det_cropped"
  top: "loss_bbox_det"
  loss_weight: 1
}

#========= RPN ============
# Dummy layers so that initial parameters are saved into the output net

layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn/output"
  param { lr_mult: 0 decay_mult: 0 }
  param { lr_mult: 0 decay_mult: 0 }
  convolution_param {
    num_output: 256
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param { lr_mult: 0 decay_mult: 0 }
  param { lr_mult: 0 decay_mult: 0 }
  convolution_param {
    num_output: 18   # 2(bg/fg) * 9(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param { lr_mult: 0 decay_mult: 0 }
  param { lr_mult: 0 decay_mult: 0 }
  convolution_param {
    num_output: 36   # 4 * 9(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "silence_rpn_cls_score"
  type: "Silence"
  bottom: "rpn_cls_score"
}
layer {
  name: "silence_rpn_bbox_pred"
  type: "Silence"
  bottom: "rpn_bbox_pred"
}
